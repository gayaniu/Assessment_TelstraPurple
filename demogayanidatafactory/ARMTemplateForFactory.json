{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demogayanidatafactory"
		},
		"AzureDataLakeStorage_telstrapurpledatastore_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_telstrapurpledatastore'"
		},
		"DestinationServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DestinationServer'"
		},
		"RSSFeedLinkService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'RSSFeedLinkService'"
		},
		"RunDataBricksTransformation_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'RunDataBricksTransformation'"
		},
		"StorageLinkedBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'StorageLinkedBlob'"
		},
		"AzureDataLakeStorage_telstrapurpledatastore_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://telstrapurpledatastore.dfs.core.windows.net"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.fuelwatch.wa.gov.au/fuelwatch/fuelWatchRSS"
		},
		"MovieRatings_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://drive.google.com/file/d/1P70BRvmWyXbsjHe0QEIWpgrm5h7LnEqx/view?usp=sharing"
		},
		"RSSFeedLinkService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://telstrapurpledatastore.dfs.core.windows.net/"
		},
		"SSMS_Secrets_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://gayaniKeyvault.vault.azure.net/"
		},
		"fuelWatchRSS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.fuelwatch.wa.gov.au/fuelwatch/fuelWatchRSS"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/IngestFuelData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFuelData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FuelFeedRRS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FuelFeedJsonData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FuelFeedRRS')]",
				"[concat(variables('factoryId'), '/datasets/FuelFeedJsonData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestRRSFeed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRRSData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "datalakestore/Raw/test"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FuelDataRaw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FeedJsonData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FuelDataRaw')]",
				"[concat(variables('factoryId'), '/datasets/FeedJsonData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MapData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MapData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesDataMap",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DiscuntData": {},
									"SinktoDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SalesDataMap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFeedData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This ETL is to move Feed Data from Fuel Feed",
				"activities": [
					{
						"name": "CopyFeedDatatoADSL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "datalakestore/Raw/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FuelDataRaw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FeedJsonData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformData",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CopyFeedDatatoADSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/gayanitweety1603@gmail.com/TransformData"
						},
						"linkedServiceName": {
							"referenceName": "RunDataBricksTransformation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IngestToDataMart",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "TransformData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/gayanitweety1603@gmail.com/IngestToDataMaart"
						},
						"linkedServiceName": {
							"referenceName": "RunDataBricksTransformation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Model_datawarehouse",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IngestToDataMart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[SP_Populate_DW_Warehouse]"
						},
						"linkedServiceName": {
							"referenceName": "DestinationServer",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-22T01:49:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FuelDataRaw')]",
				"[concat(variables('factoryId'), '/datasets/FeedJsonData')]",
				"[concat(variables('factoryId'), '/linkedServices/RunDataBricksTransformation')]",
				"[concat(variables('factoryId'), '/linkedServices/DestinationServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLSInk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DestinationServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesDataNew"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DestinationServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "film.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "results",
						"container": "curated"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FeedJsonData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_telstrapurpledatastore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Feed_data",
						"folderPath": "Raw",
						"fileSystem": "datalakestore"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"rss": {
							"type": "object",
							"properties": {
								"channel": {
									"type": "object",
									"properties": {
										"title": {
											"type": "string"
										},
										"ttl": {
											"type": "integer"
										},
										"link": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"language": {
											"type": "string"
										},
										"copyright": {
											"type": "string"
										},
										"lastBuildDate": {
											"type": "string"
										},
										"image": {
											"type": "object",
											"properties": {
												"url": {
													"type": "string"
												},
												"title": {
													"type": "string"
												},
												"link": {
													"type": "string"
												}
											}
										},
										"item": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"title": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"brand": {
														"type": "string"
													},
													"date": {
														"type": "string"
													},
													"price": {
														"type": "number"
													},
													"trading-name": {
														"type": "string"
													},
													"location": {
														"type": "string"
													},
													"address": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"latitude": {
														"type": "number"
													},
													"longitude": {
														"type": "number"
													},
													"site-features": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"@version": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_telstrapurpledatastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FuelDataRaw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fuelWatchRSS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/fuelWatchRSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FuelFeedJsonData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_telstrapurpledatastore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('RRSFeeddata_' ,substring(convertFromUtc(utcnow() , 'Australian Eastern Standard Time'),0,10),  '.json') ",
							"type": "Expression"
						},
						"folderPath": "Raw",
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_telstrapurpledatastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FuelFeedRRS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageLinkedBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesLT.Address.csv",
						"container": "curated"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageLinkedBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_telstrapurpledatastore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_telstrapurpledatastore_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_telstrapurpledatastore_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Destination server Data model-Datawarehouse",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DestinationServer_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "SSMS_Secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "ssmsloginpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SSMS_Secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieRatings')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This linked service will access the Kaggle Movie  rating dataset",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('MovieRatings_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RSSFeedLinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('RSSFeedLinkService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('RSSFeedLinkService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunDataBricksTransformation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4656317502383153.13.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('RunDataBricksTransformation_accessToken')]"
					},
					"existingClusterId": "0117-135324-wla3xb0k"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSMS_Secrets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('SSMS_Secrets_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageLinkedBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('StorageLinkedBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fuelWatchRSS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This service will load data from fuelWatchRSS dataset from Government offcial web site in xml format",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('fuelWatchRSS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesDataMap')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csvService",
								"type": "DatasetReference"
							},
							"name": "DiscuntData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSQLSInk",
								"type": "DatasetReference"
							},
							"name": "SinktoDB"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id as short,",
						"          address as string,",
						"          name as string,",
						"          city as string,",
						"          country as string,",
						"          number as string,",
						"          uniqueidentifier as string,",
						"          timestamp as string,",
						"          new as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> DiscuntData",
						"DiscuntData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinktoDB"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvService')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQLSInk')]"
			]
		}
	]
}